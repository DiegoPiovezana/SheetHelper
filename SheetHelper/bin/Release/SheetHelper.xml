<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SheetHelper</name>
    </assembly>
    <members>
        <member name="T:SheetHelper.ExcelHelper">
            <summary>
            Biblioteca rápida e leve, para fácil conversão de grandes arquivos Excel
            </summary>
        </member>
        <member name="M:SheetHelper.ExcelHelper.CloseExcel">
            <summary>
            Encerra todos os processos do Excel
            </summary>
        </member>
        <member name="M:SheetHelper.ExcelHelper.DefineColunms(System.String[])">
            <summary>
            Recebe as colunas em string, converte para caracter e retorna em ASCII correspondente
            </summary>
        </member>
        <member name="M:SheetHelper.ExcelHelper.DefineRows(System.String,System.Int32)">
            <summary>
            Recebe as linhas em string, e retorna um vetor de inteiros com a primeira e última linha
            </summary>
        </member>
        <member name="M:SheetHelper.ExcelHelper.ReadXLS(System.IO.FileStream)">
            <summary>
            Realiza a leitura de arquivos .xls, .xlsx e .xlsb
            </summary>
        </member>
        <member name="M:SheetHelper.ExcelHelper.ReadCSV(System.IO.FileStream)">
            <summary>
            Realiza a leitura de arquivos .csv
            </summary>
        </member>
        <member name="M:SheetHelper.ExcelHelper.Converter(System.String,System.String,System.Int32,System.String,System.String[],System.String,System.Windows.Forms.ProgressBar)">
            <summary>
            Realiza a conversão do arquivo Excel localizado em <paramref name="origin"/>, salva em <paramref name="destiny"/>
            e retorna 'true' caso a conversão tenha ocorrido com sucesso.
            Utilize o método "ConverterExcept" para realizar a conversão e tratar algumas exceções!
            </summary>
            <param name="origin">Diretorio + nome do arquivo de origem + formato. Ex.: "C:\\Users\\ArquivoExcel.xlsx"</param>
            <param name="destiny">Diretorio + nome do arquivo de destino + formato. Ex.: "C:\\Users\\ArquivoExcel.csv"</param>
            <param name="sheet">Aba da planilha a ser convertida. Ex.: 1 (segunda aba)</param>
            <param name="separator">Separador a ser utilizado para realizar a conversão. Ex.: ";"</param>
            <param name="columns">"Vetor de caracteres (maiúsculo ou minúsculo) contendo todas as colunas desejadas. Ex.: "{ 'A', 'b', 'E', 'C' }"</param>
            <param name="rows">"Informe a primeira e última linha (ou deixe em branco). Ex.: "1:50 (linha 1 até linha 50)"</param>
            <param name="pgbar">"Caso desejado, passe uma ProgressBar para ser carregada em 100 (ou null). Ex.: "ProgressBar pgbar = new ProgressBar()"</param>
            <returns>"true" se convertido com sucesso. "false" se não convertido.</returns>
        </member>
        <member name="M:SheetHelper.ExcelHelper.ConverterExcept(System.String,System.String,System.Int32,System.String,System.String[],System.String,System.Windows.Forms.ProgressBar)">
            <summary>
            Realiza a conversão do arquivo Excel localizado em <paramref name="origin"/>, salva em <paramref name="destiny"/>
            com tratativa de exceçoes para o usuário final (arquivo inexistente no diretorio ou aberto durante a conversão)
            e retorna 'true' caso a conversão tenha ocorrido com sucesso
            </summary>
            <param name="origin">Diretorio + nome do arquivo de origem + formato. Ex.: "C:\\Users\\ArquivoExcel.xlsx"</param>
            <param name="destiny">Diretorio + nome do arquivo de destino + formato. Ex.: "C:\\Users\\ArquivoExcel.csv"</param>
            <param name="sheet">Aba da planilha a ser convertida. Ex.: 1 (segunda aba)</param>
            <param name="separator">Separador a ser utilizado para realizar a conversão. Ex.: ";"</param>
            <param name="columns">"Vetor de caracteres (maiúsculo ou minúsculo) contendo todas as colunas desejadas. Ex.: "{ 'A', 'b', 'E', 'C' }. Passe null ou um vetor vazio caso precise de todas as colunas convertidas"</param>
            <param name="rows">"Informe a primeira e última linha (ou deixe em branco). Ex.: "1:50 (linha 1 até linha 50)"</param>
            <param name="pgbar">"Caso desejado, passe uma ProgressBar para ser carregada em 100 (ou null). Ex.: "ProgressBar pgbar = new ProgressBar()"</param>
            <returns>"true" se convertido com sucesso. "false" se não convertido.</returns>
        </member>
    </members>
</doc>
